# syntax=docker/dockerfile:1
#
#
FROM node:23-alpine AS base
WORKDIR /app
ENV NODE_ENV=production

ARG NODE_BACKEND_ENDPOINT
ARG NODE_ALERT_ENDPOINT
ARG NODE_MODEL_FAST_API_ENDPOINT
ARG NODE_ORCHESTRATOR_ENDPOINT

ARG VITE_BACKEND_ENDPOINT
ARG VITE_ALERT_ENDPOINT
ARG VITE_MODEL_FAST_API_ENDPOINT
ARG VITE_ORCHESTRATOR_ENDPOINT
ARG VITE_ORCHESTRATOR_PATH_PREFIX
ARG VITE_BACKEND_TOKEN
ARG VITE_ALERT_TOKEN
ARG VITE_CASE_TOKEN
ARG VITE_ORCHESTRATOR_TOKEN

ENV NODE_BACKEND_ENDPOINT=$NODE_BACKEND_ENDPOINT
ENV NODE_ALERT_ENDPOINT=$NODE_ALERT_ENDPOINT
ENV NODE_MODEL_FAST_API_ENDPOINT=$NODE_MODEL_FAST_API_ENDPOINT
ENV NODE_ORCHESTRATOR_ENDPOINT=$NODE_ORCHESTRATOR_ENDPOINT

ENV VITE_BACKEND_ENDPOINT=$VITE_BACKEND_ENDPOINT
ENV VITE_ALERT_ENDPOINT=$VITE_ALERT_ENDPOINT
ENV VITE_MODEL_FAST_API_ENDPOINT=$VITE_MODEL_FAST_API_ENDPOINT
ENV VITE_ORCHESTRATOR_ENDPOINT=$VITE_ORCHESTRATOR_ENDPOINT
ENV VITE_ORCHESTRATOR_PATH_PREFIX=$VITE_ORCHESTRATOR_PATH_PREFIX
ENV VITE_BACKEND_TOKEN=$VITE_BACKEND_TOKEN
ENV VITE_ALERT_TOKEN=$VITE_ALERT_TOKEN
ENV VITE_CASE_TOKEN=$VITE_CASE_TOKEN
ENV VITE_ORCHESTRATOR_TOKEN=$VITE_ORCHESTRATOR_TOKEN

RUN apk update && apk upgrade && \
	apk add --no-cache libc6-compat && \
	npm install -g corepack && \
	corepack enable && \
	corepack prepare yarn@4.9.1 --activate

COPY . .
COPY ./src/main.tsx ./src/main.tsx 
RUN ls -la
RUN ls -la ./src/
RUN yarn install --immutable
RUN yarn build

#
#
FROM nginx:alpine AS production

# Копируем билд фронта
COPY --from=base /app/dist /usr/share/nginx/html

# Применяем наш конфиг Nginx (с прокси для /orchestrator/)
COPY nginx.conf /etc/nginx/conf.d/default.conf

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]
